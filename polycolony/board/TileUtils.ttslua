local Object = require('ge_tts.Object')
local ObjectUtils = require('ge_tts.ObjectUtils')
local AssetLibrary = require('polycolony.TileAssetLibrary')
local Vector3 = require('ge_tts.Vector3')

local TileUtils = {}

function TileUtils.qubicToWorld(qubicCoords, edgeLength)
    local qBasisVector = Vector3(math.sqrt(3)/2, 0, 3/2).scale(edgeLength)
    local rBasisVector = Vector3(math.sqrt(3), 0, 0).scale(edgeLength)
    return Vector3(qBasisVector.scale(qubicCoords.x).add(rBasisVector.scale(qubicCoords.z)))
end

function TileUtils.tileState(tileShape, position, rotation)

    return {
        -- Internal name.
        Name = Object.Name.Model,

        -- Tooltip name to be displayed in game.
        Nickname = tileShape.name,

        -- Transform
        Transform = ObjectUtils.transformState({
            position = position,
            rotation = rotation,
            scale = {1,1,1},
        }),

        -- Tiles should not be able to be interacted with.
        -- Also tiles have concave collision meshes, object must be locked
        Locked = true,

        -- Model and texture information
        CustomMesh = {
            MeshURL = tileShape.mesh,
            DiffuseURL = tileShape.diffuse,
            ColliderURL = tileShape.mesh,
            Convex = false,
            --TODO custom shader for tiles at some point if they look bad.
        }
    }
end

return TileUtils