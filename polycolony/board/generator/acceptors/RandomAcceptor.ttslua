local AbstractAcceptor = require('polycolony.board.generator.acceptors.AbstractAcceptor')
local TableUtils = require('ge_tts.TableUtils')

local RandomAcceptor = {}

setmetatable(RandomAcceptor, TableUtils.merge(getmetatable(AbstractAcceptor), {
    __call = function(_, numberOfNodes)

        --TODO probably have to do some table merge stuff that we see in ge_tts? For saved states
        local self = AbstractAcceptor(numberOfNodes)

        -- We do not remove the color from the solution node's neighbors' list of possible colorings because we have no constraints.
        function self.assignSolution(solutionNode, color, neighbors)
            self.solution[solutionNode].assignment = color
            self.solution[solutionNode].available[color] = nil
            self.solvedVertices = self.solvedVertices + 1
        end

        function self.removeSolution(solutionNode, color, neighbors)
            self.solution[solutionNode].assignment = -1
            self.solution[solutionNode].available[color] = color
            self.solvedVertices = self.solvedVertices - 1
        end

        self.accept = function(assignment) return math.random() > 0.5 end

        return self
    end,
    __index = AbstractAcceptor
}))

return RandomAcceptor