-- ge_tts objects to be used for saving, loading, and generally setting up.
local SaveManager = require('ge_tts.SaveManager')
local JSON = require('ge_tts.json')
local TableUtils = require('ge_tts.TableUtils')
local ObjectUtils = require('ge_tts.ObjectUtils')
local HandZone = require('ge_tts.HandZone')
local Logger = require('ge_tts.Logger')

-- Implemented custom classes for card spawning
local CardInstance = require('polycolony.cards.CardInstance')
local CardLibrary = require('polycolony.cards.CardLibrary')
local CardType = require('polycolony.cards.CardType')
local CardUtils = require('polycolony.cards.CardUtils')
local CardComponents = require('polycolony.cards.CardComponents')
local WorldLayout = require('polycolony.WorldLayout')
local CardDropZone = require('polycolony.cards.CardDropZone')

-- Board Stuff
local BoardGenerator = require('polycolony.board.generator.BoardGenerator')
local BoardConfig = require('polycolony.board.BoardConfig')


-- Table to keep track of instances and zones
---@type CardInstance[]
local cardInstances = {}

---@type CardDropZone[]
local cardDropZones = {}

local function onLoad(state)
    -- Using a wait here to allow the debugger to catch any breaks
    Wait.time(function()
        local isBlankSave = state == ''

        if isBlankSave then
            -- We have no save and we are loading for the first time.
    
            -- Build all the card related components including drop zones
            --CardComponents(WorldLayout.SMALL)
            local boardGenerator = BoardGenerator(BoardConfig.SMALL, 2)

        else
            --We need to restore the save game.
            local savedState = JSON.decode(state)
    
            for _, cardSavedState in ipairs(savedState.cardInstances) do
                local instance = CardInstance(cardSavedState)
                -- Keep track of the instance we just created
                table.insert(cardInstances, instance)
            end
        end
    end,
    1)
end



local function onSave()
    local savedState = {
        cardInstances = TableUtils.map(cardInstances, function(cardInstance)
            return cardInstance.save()
        end)
    }

    return JSON.encode(savedState)
end

SaveManager.registerOnLoad('E:/polycolony/polycolony.Main', onLoad)
SaveManager.registerOnSave('E:/polycolony/polycolony.Main', onSave)
